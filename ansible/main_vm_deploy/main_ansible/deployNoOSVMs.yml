---
- name: create multiple VMs
  hosts: localhost
  become: false
  gather_facts: false
  ignore_errors: yes
  
  vars_files:
    # - varsCroitNodeVMs.yml
    - './extra_vars/{{ vmvars }}'  # Example  -e 'vmvars=varsCroitNodeVMs.yml'

  tasks:
    - name: create folder
      community.vmware.vcenter_folder:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        datacenter: "{{ vcenter_datacenter }}"
        folder_name: "{{ vcenter_destination_folder }}"
        folder_type: vm
        state: present
    - name: Clone the VM template and customize
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        name: "{{ item.vm_name }}"
        template: "{{ vm_template }}"
        datacenter: "{{ vcenter_datacenter }}"
        folder: "{{ vcenter_destination_folder }}"
        cluster: "{{ vcenter_cluster }}"
        state: "{{ vm_state }}"
        hardware:
          memory_mb: "{{ vm_hw_ram_mb }}"
          num_cpus: "{{ vm_hw_cpu_n }}"
          scsi: "{{ vm_hw_scsi }}"
          hotadd_cpu: "{{ hot_add_cpu | default('True') }}"
          hotadd_memory: "{{ hot_add_memory | default('True') }}"
        networks:
          - name: "{{ vm_net_name1 }}"
            start_connected: true
          - name: "{{ vm_net_name2 }}"
            start_connected: true
          - name: "{{ vm_net_name3 }}"
            start_connected: true
          - name: "{{ vm_net_name1 }}"
            start_connected: true
          - name: "{{ vm_net_name2 }}"
            start_connected: true
          - name: "{{ vm_net_name3 }}"
            start_connected: true
      with_items: "{{ vms }}"

    - name: Sleep for 5 seconds and continue with play
      ansible.builtin.wait_for:
        timeout: 5
      delegate_to: localhost

    # - name: add disk to vms
    #   community.vmware.vmware_guest_disk:
    #     hostname: "{{ vcenter_hostname }}"
    #     username: "{{ vcenter_username }}"
    #     password: "{{ vcenter_password }}"
    #     validate_certs: "{{ vcenter_validate_certs }}"
    #     datacenter: "{{ vcenter_datacenter }}"
    #     name: "{{ item.vm_name }}"
        # disk:
        #   - size_gb: "{{ item.vm_disk_gb1 }}"
        #     type: "{{ vm_disk_type }}"
        #     datastore: "{{ vm_disk_datastore }}"
        #     unit_number: "0"
        #     scsi_type: "paravirtual"
        #     scsi_controller: "0"
        #   - size_gb: "{{ item.vm_disk_gb2 }}"
        #     type: "{{ vm_disk_type }}"
        #     datastore: "{{ vm_disk_datastore }}"
        #     unit_number: "1"
        #     scsi_type: "paravirtual"
        #     scsi_controller: "0"
        #   - size_gb: "{{ item.vm_disk_gb3 }}"
        #     type: "{{ vm_disk_type }}"
        #     datastore: "{{ vm_disk_datastore }}"
        #     unit_number: "0"
        #     scsi_type: "paravirtual"
        #     scsi_controller: "1"
        #   - size_gb: "{{ item.vm_disk_gb4 }}"
        #     type: "{{ vm_disk_type }}"
        #     datastore: "{{ vm_disk_datastore }}"
        #     unit_number: "1"
        #     scsi_type: "paravirtual"
        #     scsi_controller: "1"
        #   - size_gb: "{{ item.vm_disk_gb5 }}"
        #     type: "{{ vm_disk_type }}"
        #     datastore: "{{ vm_disk_datastore }}"
        #     unit_number: "0"
        #     scsi_type: "paravirtual"
        #     scsi_controller: "2"
          # - size_gb: "{{ item.vm_disk_gb6 }}"
          #   type: "{{ vm_disk_type }}"
          #   datastore: "{{ vm_disk_datastore }}"
          #   unit_number: "1"
          #   scsi_type: "paravirtual"
          #   scsi_controller: "2"
          # - size_gb: "{{ item.vm_disk_gb7 }}"
          #   type: "{{ vm_disk_type }}"
          #   datastore: "{{ vm_disk_datastore }}"
          #   unit_number: "0"
          #   scsi_type: "paravirtual"
          #   scsi_controller: "3"
          # - size_gb: "{{ item.vm_disk_gb8 }}"
          #   type: "{{ vm_disk_type }}"
          #   datastore: "{{ vm_disk_datastore }}"
          #   unit_number: "1"
          #   scsi_type: "paravirtual"
          #   scsi_controller: "3"
      with_items: "{{ vms }}"


